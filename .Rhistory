filename = function() {
paste("data-", Sys.Date(), ".xlsx", sep="")
},
content = function(file) {
write_xlsx(tabuladoOK(), file)
}
)
### Alertas warnings #####
# input$varINTERES
# input$varDENOM
# input$varCRUCE
# input$varSUBPOB
# input$varFACT1
# input$varCONGLOM
# input$varESTRATOS
# input$tipoCALCULO
# input$IC
# input$ajuste_en
# "tipoCALCULO", "¿Qué tipo de cálculo deseas realizar?",
# choices = list("Media","Proporción","Suma variable Continua","Conteo casos", "Mediana")
#### warning alert var interes ####
wrn_var_int <- reactive({
if(show_wrn == F){
even = FALSE
}else{
var <- input$varINTERES
even <- FALSE
if(var != "") {
if(input$tipoCALCULO %in% c("Media","Suma variable Continua")) {
es_prop <- datos() %>%
dplyr::mutate(es_prop_var = dplyr::if_else(!!rlang::parse_expr(var) == 1 | !!rlang::parse_expr(var) == 0 | is.na(!!rlang::parse_expr(var)),1,0))
even <- sum(es_prop$es_prop_var) == nrow(es_prop)
shinyFeedback::feedbackWarning("varINTERES", even, "¡La variable no es continua!")
even
}else if(input$tipoCALCULO %in% c("Proporción","Conteo casos")){
es_prop <- datos() %>%
dplyr::mutate(es_prop_var = dplyr::if_else(!!rlang::parse_expr(var) == 1 | !!rlang::parse_expr(var) == 0 | is.na(!!rlang::parse_expr(var)),1,0))
even <- sum(es_prop$es_prop_var) != nrow(es_prop)
shinyFeedback::feedbackWarning("varINTERES", even, "¡La variable no es de proporcion!")
even
}
}else{even}
}
})
### warning alert var denom ####
wrn_var_denom <- reactive({
#  req(input$tipoCALCULO == "Proporción", input$varDENOM)
if(show_wrn == F | is.null(input$varDENOM)){
even = FALSE
}else{
var <- input$varDENOM
even <- FALSE
if(var != ""){
es_prop <- datos() %>%
dplyr::mutate(es_prop_var = dplyr::if_else(!!rlang::parse_expr(var) == 1 | !!rlang::parse_expr(var) == 0 | is.na(!!rlang::parse_expr(var)),1,0))
even <- sum(es_prop$es_prop_var) != nrow(es_prop)
shinyFeedback::feedbackWarning("varDENOM", even, "¡La variable no es de proporcion!")
even
}else{even}
}
})
#### warning alert var subpop ####
wrn_var_subpop <- reactive({
if(show_wrn == F){
even = FALSE
}else{
subpop <- input$varSUBPOB
even <- FALSE
if(subpop != "") {
es_prop_subpop <- datos() %>% dplyr::mutate(es_prop_subpop = dplyr::if_else(!!rlang::parse_expr(subpop) == 1 | !!rlang::parse_expr(subpop) == 0, 1, 0))
## Primero se inspecciona si tiene NAs
if(sum(is.na(es_prop_subpop[[subpop]] > 0)) > 0){
even <- sum(is.na(es_prop_subpop[[subpop]] > 0)) > 0
shinyFeedback::feedbackWarning("varSUBPOB", even, "subpop contiene NAs!")
even
### si no tiene NA se inspecciona si es continua
}else if(sum(is.na(es_prop_subpop[[subpop]] > 0)) == 0){
even <- sum(es_prop_subpop$es_prop_subpop) != nrow(es_prop_subpop)
shinyFeedback::feedbackWarning("varSUBPOB",even,"subpop debe ser una variable dummy!")
even
}
# sum(es_prop_subpop$es_prop_subpop) == nrow(es_prop_subpop)
}else{even}
}
})
#### warning alert var fact_exp ####
wrn_var_factexp <- reactive({
req(input$varFACT1)
if(show_wrn == F){
even = FALSE
}else{
var <- input$varFACT1
even <- FALSE
if(var != "") {
even <- sum(is.na(datos()[[var]] > 0)) > 0
shinyFeedback::feedbackWarning("varFACT1", even, "La variable contiene NAs!")
even
# sum(es_prop_subpop$es_prop_subpop) == nrow(es_prop_subpop)
}else{even}
}
})
#### warning alert var conglom ####
wrn_var_conglom <- reactive({
if(show_wrn == F){
even = FALSE
}else{
var <- input$varCONGLOM
even <- FALSE
if(var != "") {
even <- sum(is.na(datos()[[var]] > 0)) > 0
shinyFeedback::feedbackWarning("varCONGLOM", even, "La variable contiene NAs!")
even
# sum(es_prop_subpop$es_prop_subpop) == nrow(es_prop_subpop)
}else{even}
}
})
#### warning alert var strata ####
wrn_var_strata <- reactive({
if(show_wrn == F){
even = FALSE
}else{
var <- input$varESTRATOS
even <- FALSE
if(var != "") {
even <- sum(is.na(datos()[[var]] > 0)) > 0
shinyFeedback::feedbackWarning("varESTRATOS", even, "La variable contiene NAs!")
even
# sum(es_prop_subpop$es_prop_subpop) == nrow(es_prop_subpop)
}else{even}
}
})
#### resume warnings ###----
warning_resum = reactive({
any(wrn_var_int(),wrn_var_denom(),
wrn_var_subpop(),wrn_var_factexp(),wrn_var_conglom(),wrn_var_strata())
})
#    output$wrn_var_subpop <- renderText(wrn_var_subpop())
#### MODAL warnings cálculos ####
observeEvent(input$actionTAB,{
# tiene que haber warning para que se muestre
req(warning_resum())
shinyalert("¡Error!", "¡Considere las advertencias!", type = "error")
})
observeEvent(input$actionTAB,{
# tiene que haber warning para que se muestre
req(input$varINTERES == "")
shinyalert("¡Error!", "¡Debe seleccionar una variable de interés!", type = "error")
})
observeEvent(input$actionTAB,{
# tiene que haber warning para que se muestre
req(input$varCONGLOM == "" || input$varESTRATOS == "" || input$varFACT1 == "")
shinyalert("¡Error!", "¡Faltan variables del diseño complejo!", type = "error")
})
# r <- reactiveValues(NULL)
# observe({
#   req(warning_resum(), input$actionTAB)
#   # Updates goButton's label and icon
#
#    input$actionTAB <- r
#
# })}
##### * Pruebas de outputs * ####
output$tipoCalText <- renderPrint({
req(debug == T)
list(debug_chunk)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
#
shiny_calidad()
devtools::load_all(".")
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
runApp('R')
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
getwd()
devtools::load_all(".")
getwd()
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
rlang::last_error()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
runApp('R')
devtools::load_all(".")
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
wd()
pwd()
getwd()
getwd()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
}
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
addResourcePath(prefix = "www", directoryPath = "shinycalidad2/www")
addResourcePath(prefix = "www", directoryPath = "/www")
addResourcePath(prefix = "www", directoryPath = "./www")
# UI ----
library(shiny)
app_ui <- shiny::div(shinyFeedback::useShinyFeedback(),
shinyjs::useShinyjs(),
# tags$head(
#   tags$link(rel = "stylesheet", type = "text/css", href = "maqueta.css")
# ),
shiny::includeCSS("www/maqueta.css"),
shiny::div(class="top-ine",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('<div class="menu-ine">
<img class="logo-ine" src="ine_blanco.svg" alt="INE">
</div>
<div class="pull-right">
<a class="btn btn-xs btn-primary" href="https://www.ine.cl" target="_blank">Volver al home INE</a>
</div>'),
)
)
),
shiny::div(class="conten-ine",
### fluid page de texto de descripción
shiny::fluidPage(
#   shiny::div(class="container-fluid",
shiny::div(class="container",
shiny::HTML('<div class="row">
<div class="col-md-12">
<h3 class="titu-ine">Evaluación de Calidad de Estimaciones en Encuestas de Hogares</h3>
<p class="text-ine">
Esta aplicación permite acercar a las personas usuarias la implementación del estándar de calidad para la evaluación de estimaciones en encuestas de hogares del INE. A través de ella, las personas usuarias pueden conocer la precisión que tienen las estimaciones generadas a partir de encuestas producidas por el INE u otras encuestas que utilicen muestreo probabilístico estratificado y en 2 etapas. Con esto se busca poner a disposición de la comunidad una herramienta interactiva para la cual no se requiere contar con conocimientos de programación, promoviendo el uso adecuado de la información publicada. Esta aplicación permite evaluar la calidad de la estimación de medias, totales y proporciones.                    </p>
</div>
</div>')
)
)
devtools::load_all(".")
app_ui <- shiny::div(shinyFeedback::useShinyFeedback(),
shinyjs::useShinyjs(),
# tags$head(
#   tags$link(rel = "stylesheet", type = "text/css", href = "maqueta.css")
# ),
shiny::includeCSS("www/maqueta.css"),
shiny::div(class="top-ine",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('<div class="menu-ine">
<img class="logo-ine" src="ine_blanco.svg" alt="INE">
</div>
<div class="pull-right">
<a class="btn btn-xs btn-primary" href="https://www.ine.cl" target="_blank">Volver al home INE</a>
</div>'),
)
)
),
shiny::div(class="conten-ine",
### fluid page de texto de descripción
shiny::fluidPage(
#   shiny::div(class="container-fluid",
shiny::div(class="container",
shiny::HTML('<div class="row">
<div class="col-md-12">
<h3 class="titu-ine">Evaluación de Calidad de Estimaciones en Encuestas de Hogares</h3>
<p class="text-ine">
Esta aplicación permite acercar a las personas usuarias la implementación del estándar de calidad para la evaluación de estimaciones en encuestas de hogares del INE. A través de ella, las personas usuarias pueden conocer la precisión que tienen las estimaciones generadas a partir de encuestas producidas por el INE u otras encuestas que utilicen muestreo probabilístico estratificado y en 2 etapas. Con esto se busca poner a disposición de la comunidad una herramienta interactiva para la cual no se requiere contar con conocimientos de programación, promoviendo el uso adecuado de la información publicada. Esta aplicación permite evaluar la calidad de la estimación de medias, totales y proporciones.                    </p>
</div>
</div>')
)
)
app_ui <- shiny::div(shinyFeedback::useShinyFeedback(),
shinyjs::useShinyjs(),
# tags$head(
#   tags$link(rel = "stylesheet", type = "text/css", href = "maqueta.css")
# ),
shiny::includeCSS("www/maqueta.css"),
shiny::div(class="top-ine",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('<div class="menu-ine">
<img class="logo-ine" src="ine_blanco.svg" alt="INE">
</div>
<div class="pull-right">
<a class="btn btn-xs btn-primary" href="https://www.ine.cl" target="_blank">Volver al home INE</a>
</div>'),
)
)
),
shiny::div(class="conten-ine",
### fluid page de texto de descripción
shiny::fluidPage(
#   shiny::div(class="container-fluid",
shiny::div(class="container",
shiny::HTML('<div class="row">
<div class="col-md-12">
<h3 class="titu-ine">Evaluación de Calidad de Estimaciones en Encuestas de Hogares</h3>
<p class="text-ine">
Esta aplicación permite acercar a las personas usuarias la implementación del estándar de calidad para la evaluación de estimaciones en encuestas de hogares del INE. A través de ella, las personas usuarias pueden conocer la precisión que tienen las estimaciones generadas a partir de encuestas producidas por el INE u otras encuestas que utilicen muestreo probabilístico estratificado y en 2 etapas. Con esto se busca poner a disposición de la comunidad una herramienta interactiva para la cual no se requiere contar con conocimientos de programación, promoviendo el uso adecuado de la información publicada. Esta aplicación permite evaluar la calidad de la estimación de medias, totales y proporciones.                    </p>
</div>
</div>')
)
)
app_ui <- shiny::div(shinyFeedback::useShinyFeedback(),
shinyjs::useShinyjs(),
# tags$head(
#   tags$link(rel = "stylesheet", type = "text/css", href = "maqueta.css")
# ),
shiny::includeCSS("www/maqueta.css"),
shiny::div(class="top-ine",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('<div class="menu-ine">
<img class="logo-ine" src="ine_blanco.svg" alt="INE">
</div>
<div class="pull-right">
<a class="btn btn-xs btn-primary" href="https://www.ine.cl" target="_blank">Volver al home INE</a>
</div>'),
)
)
),
shiny::div(class="conten-ine",
### fluid page de texto de descripción
shiny::fluidPage(
#   shiny::div(class="container-fluid",
shiny::div(class="container",
shiny::HTML('<div class="row">
<div class="col-md-12">
<h3 class="titu-ine">Evaluación de Calidad de Estimaciones en Encuestas de Hogares</h3>
<p class="text-ine">
Esta aplicación permite acercar a las personas usuarias la implementación del estándar de calidad para la evaluación de estimaciones en encuestas de hogares del INE. A través de ella, las personas usuarias pueden conocer la precisión que tienen las estimaciones generadas a partir de encuestas producidas por el INE u otras encuestas que utilicen muestreo probabilístico estratificado y en 2 etapas. Con esto se busca poner a disposición de la comunidad una herramienta interactiva para la cual no se requiere contar con conocimientos de programación, promoviendo el uso adecuado de la información publicada. Esta aplicación permite evaluar la calidad de la estimación de medias, totales y proporciones.                    </p>
</div>
</div>')
)
)
),
# Agregar el logo del INE
shiny::div(class="dash-ine",
shiny::fluidPage(
waiter::useWaitress("white"),
shiny::div(class="container",
sidebarLayout(
## Sidebar ####
sidebarPanel(width = 3,
## UI INPUT ####
shinyWidgets::radioGroupButtons(
inputId = "Id004",
label = h4("Selecciona desde donde cargar base de datos"),
choices = c("Cargar datos propios", "Trabajar con datos INE"),
status = "primary",
justified = TRUE
),
h5("En esta Sección puedes seleccionar la opción de cargar una base de datos desde tu computador, o cargar una base de datos del INE"),
uiOutput("datos_locales"),
uiOutput("DescargaINE"),
shinyWidgets::radioGroupButtons(
inputId = "SCHEME",
label = h5("Selecciona el esquema de evaluación, INE o CEPAL"),
choices = c("chile", "cepal"),
status = "primary",
justified = TRUE
),
## render selección de variables de interes, y de cruce
# uiOutput("seleccion1"),
selectInput("varINTERES", label = h5("Variable de interés"),choices = "",  multiple = F),
#textOutput("wrn_var_int"),
uiOutput("denominador"),
radioButtons("tipoCALCULO", "¿Qué tipo de cálculo deseas realizar?",
choices = list("Media","Proporción","Suma variable Continua","Conteo casos"), inline = F ),
selectInput("varCRUCE", label = h5("Desagregación"), choices = "", selected = NULL, multiple = T),
checkboxInput("IC", "¿Deseas agregar intervalos de confianza?",value = F),
#checkboxInput("ajuste_ene", "¿Deseas agregar los ajuste del MM ENE?",value = F),
uiOutput("etiqueta"),
selectInput("varSUBPOB", label = h5("Subpoblación"), choices = "", selected = NULL, multiple = F),
selectInput("varFACT1", label = h5("Variable para factor de expansión"), choices = "",selected ="", multiple = F),
selectInput("varCONGLOM", label = h5("Variable para conglomerados"), choices = "", selected = "", multiple = F),
selectInput("varESTRATOS",label = h5("Variable para estratos"), choices = "", selected = "", multiple = F),
shinyjs::disabled(downloadButton("tabla", label = "Descargar tabulado")),
shinyjs::disabled(actionButton("actionTAB", label = "Generar tabulado")),
## render selección variables DC
uiOutput("seleccion2"),
## botón generación tabulado
uiOutput("botonTAB")
),
## Main PANEL ----
mainPanel(width = 9,
verbatimTextOutput("tipoCalText"),
#### render titulo tabulado
uiOutput("tituloTAB")
)
)
)
)
),
shiny::div(class="footer",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('<div class="row">
<div class="col-md-4">
<h4>INE en redes sociales</h4>
<a href="https://www.facebook.com/ChileINE/" target="_blank"><img class="facebook" src="facebook.svg"></a>
<a href="https://twitter.com/ine_chile?lang=es" target="_blank"><img class="twitter" src="twitter.svg"></a>
<a href="https://www.youtube.com/user/inechile" target="_blank"><img class="youtube" src="youtube.svg"></a>
<a href="https://www.instagram.com/chile.ine/" target="_blank"><img class="instagram" src="instagram.svg"></a>
<h4>Consultas</h4>
<p><a href="https://www.portaltransparencia.cl/PortalPdT/ingreso-sai-v2?idOrg=1003" target="_blank">Solicitud de acceso a la información pública</a></p>
<p><a href="https://atencionciudadana.ine.cl/" target="_blank">Atención ciudadana</a></p>
</div>
<div class="col-md-4">
<h4>Contacto</h4>
<p>
Dirección nacional: Morandé N°801, piso 22, Santiago, Chile<br>
RUT: 60.703.000-6<br>
Código postal: 8340148<br>
</p>
</div>
<div class="col-md-4">
<h4>SIAC / OIRS</h4>
<p>
Horario de atención:<br>
Lunes a viernes 9:00 a 17:00 horas<br>
Fono : <a>232461010</a> - <a>232461018</a><br>
Correo: ine@ine.cl<br>
</p>
</div>
</div>')
)
)
),
shiny::div(class="pie-ine",
shiny::fluidPage(
shiny::div(class="container",
shiny::HTML('
<div class="text-right">
Instituto Nacional de Estadísticas
</div>')
)
)
)
)
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
shiny_calidad()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
devtools::load_all(".")
shiny_calidad()
install.packages("analogsea")
devtools::load_all(".")
shiny_calidad()
shiny_calidad()
