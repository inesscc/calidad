library(shiny)
library(waiter)

renderUI_main_panel <- function(){
  
  tagList(
    div(id="panel_central",class="titu-ine",
        h2("Resultado evaluación de calidad"),
        actionButton("show", "Definición de indicadores"),
        verbatimTextOutput("PRUEBAS2"),
        ### render gráfico de resumen
        div(style='width:100%;overflow-x: scroll;',
            div(plotOutput('grafico'),
                align = "center",
                style = "height:200px"),
            ### render tabulado
            tags$div(
              class="my_table", # set to custom class
              htmlOutput("tabulado") %>% shinycssloaders::withSpinner(color="#0dc5c1"))
        ))
  )
  
}


ui <- fluidPage(
  useWaitress("red"),
 # sidebarLayout(
#    sidebarPanel(
  radioButtons("opt_data",label = "Opciones",choices = list("data_user"="Datos locales","data_ine"="Datos INE")),
#  ),
  actionButton("btn_tabulado", "Generar tabulado"),
#  mainPanel(
plotOutput("plot", width = 400),
uiOutput("ui_main_panel")

#  )
# )
)

server <- function(input, output, session){
  
  waitress <- Waitress$new("#ui_main_panel", theme = "overlay", infinite = TRUE)

  
  output$ui_main_panel <- renderUI({
    #if(input$opt != cond_opt){

    observeEvent(input$opt_data,{
      waitress$start()
    })

 out <- renderUI_main_panel()

    if(input$btn_tabulado){
      waitress$close() # hide when done
    }
 
 return(out)

  })
  
}

shinyApp(ui, server)
